---
- name: Verify
  hosts: localhost
  connection: local

  vars:
    ansible_python_interpreter: '{{ ansible_playbook_python }}'
    test_keys:
      - key: foo
        value: bar
      - key: fizz
        value: buzz

  tasks:
    - name: Get all pods in {{ namespace }}
      k8s_facts:
        api_version: v1
        kind: Pod
        namespace: '{{ namespace }}'
      register: pods

    - name: Output pods
      debug: var=pods

    - name: Get mcrouter Pod data
      k8s_facts:
        kind: Pod
        namespace: '{{ namespace }}'
        label_selectors:
          - app=mcrouter
      register: mcrouter_pod

    - name: Set variable with mcrouter IP
      set_fact:
        mcrouter_pod_ip: "{{ mcrouter_pod.resources[0].status.podIP }}"

    - name: Test setting keys
      script: ./membash.sh -h {{ mcrouter_pod_ip }} -p 5000 set {{ item.key }} 0 {{ item.value }}
      register: membash_key
      delegate_to: "{{ groups.k8s[0] }}"
      with_items: "{{ test_keys }}"
      failed_when: membash_key.stdout_lines[0] != 'STORED'

    - name: Test getting keys that were just set
      script: ./membash.sh -h {{ mcrouter_pod_ip }} -p 5000 get {{ item.key }}
      register: membash_key
      delegate_to: "{{ groups.k8s[0] }}"
      with_items: "{{ test_keys }}"
      failed_when: membash_key.stdout_lines[0] != item.value

    - name: Ensure there are 2 servers up according to mcrouter
      script: ./membash.sh -h {{ mcrouter_pod_ip }} -p 5000 stats
      register: membash_stats
      delegate_to: "{{ groups.k8s[0] }}"
      failed_when: "'STAT num_servers_up 2' not in membash_stats.stdout"
      vars:
        ansible_python_interpreter: "/usr/bin/python"

    - name: Display memcached / mcrouter
      debug: var=membash_stats

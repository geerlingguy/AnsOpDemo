kind: Deployment
apiVersion: apps/v1
metadata:
  name: '{{ meta.name }}'
  namespace: '{{ meta.namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcrouter
  template:
    metadata:
      labels:
        app: mcrouter
    spec:
      containers:
      - name: mcrouter
        command:
        - mcrouter
{% if pool_setup == 'sharded' %}
        - --config-str={"pools":{"A":{"servers":[{{ memcache_pool_str }}]}},"route":"PoolRoute|A"}
{% elif pool_setup == 'replicated' %}
        - --config-str={"pools":{"A":{"servers":[{{ memcache_pool_str }}]}},"route":{"type":"OperationSelectorRoute","operation_policies":{"add":"AllSyncRoute|Pool|A","delete":"AllSyncRoute|Pool|A","get":"RandomRoute|Pool|A","set":"AllSyncRoute|Pool|A"}}}
{% endif %}
        - -p
        - "5000"
{% if debug_fifo_root != '' %}
        - --debug-fifo-root={{ debug_fifo_root }}
{% endif %}
        image: "devan2502/mcrouter:latest"
        ports:
          - containerPort: 5000
